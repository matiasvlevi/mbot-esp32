"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromString = exports.toString = exports.shortenString = exports.OxenodeTypes = exports.StringToOxenodeType = exports.defaultOxenodeValues = exports.JStoOxenodeType = void 0;
exports.JStoOxenodeType = {
    object: "data",
    string: "string",
    number: "number",
    boolean: "boolean",
    function: "function",
};
exports.defaultOxenodeValues = {
    number: 0,
    string: "",
    boolean: true,
    data: {},
    function: () => { },
};
exports.StringToOxenodeType = {
    number: (text) => parseInt(text, 10),
    string: (text) => text,
    boolean: (text) => {
        if (text === "false")
            return false;
        if (text === "true")
            return true;
        return undefined;
    },
    data: (text) => {
        try {
            return JSON.parse(text);
        }
        catch (e) {
            return undefined;
        }
    },
    function: (text) => {
        // TODO: MAKE THIS WORK
        try {
            const f = eval(text);
            if (f instanceof Function)
                return undefined;
            else
                undefined;
        }
        catch (e) {
            return undefined;
        }
    },
};
exports.OxenodeTypes = Object.keys(exports.defaultOxenodeValues);
function shortenString(text, len, end = "") {
    if (text.length > len)
        return text.slice(0, len - end.length) + end;
    return text;
}
exports.shortenString = shortenString;
function toString(value) {
    if (value === undefined)
        return "undefined";
    if (typeof value === "object") {
        return JSON.stringify(value);
    }
    else if (typeof value === "string") {
        return value;
    }
    else {
        return value.toString();
    }
}
exports.toString = toString;
function fromString(type, textValue) {
    if (!exports.OxenodeTypes.includes(type))
        return undefined;
    return exports.StringToOxenodeType[type](textValue);
}
exports.fromString = fromString;
