import { Dispatch } from "react";
import { TEdge, TNode, VisualNode, TPort } from "./types";
import { EventStoreAction, NodeAction, StoreAction } from "./reducers/reducers";
export declare function fetchNode(blueprints: Record<string, VisualNode>, nodes: Record<string, TNode>, edges: Record<string, TEdge>, port: TPort, store: Record<string, any>, abortController: AbortController): Promise<Record<string, any>>;
/**
 *
 * @param blueprints
 * @param nodes
 * @param edges
 * @param node
 * @param dispatchNode
 * @param store
 * @param setStoreItem
 * @param abortController
 * @param eventInstance
 * @returns
 */
export declare function execTriggeredNodes(blueprints: Record<string, VisualNode>, nodes: Record<string, TNode>, edges: Record<string, TEdge>, node: TNode, dispatchNode: Dispatch<NodeAction>, store: Record<string, any>, setStoreItem: Dispatch<StoreAction>, abortController: AbortController, eventInstance: any | null): Promise<boolean>;
export declare function findEventNodes(nodes: Record<string, any>, name: string): any;
export declare function exec(blueprints: Record<string, VisualNode>, nodes: Record<string, TNode>, edges: Record<string, TEdge>, dispatchNode: Dispatch<NodeAction>, store: Record<string, any>, eventStore: Record<string, any>, setStoreItem: Dispatch<StoreAction>, setEventStoreItem: Dispatch<EventStoreAction>, abortController: AbortController): Promise<boolean>;
