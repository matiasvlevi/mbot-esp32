"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const core_1 = require("@oxenode/core");
const ThemeContext_1 = require("./Theme/ThemeContext");
function Select({ nodeId, name = "", value = "0", children, onChange }) {
    const { setIsFocused } = react_1.default.useContext(core_1.DragContext);
    const { nodeState, dispatchNode } = react_1.default.useContext(core_1.NodeContext);
    const { theme } = react_1.default.useContext(ThemeContext_1.ThemeContext);
    const node = { ...nodeState[nodeId] };
    if (typeof node.State[name] === "string") {
        value = node.State[name];
    }
    if (node.State === undefined) {
        node.State = {};
    }
    if (!node.State[name])
        node.State[name] = value;
    const handleOnChange = (e) => {
        if (onChange)
            onChange(e);
        dispatchNode({
            type: "UPDATE_NODE_STATE",
            payload: {
                node,
                name,
                value: e.target.value,
            },
        });
    };
    react_1.default.useEffect(() => {
        dispatchNode({
            type: "UPDATE_NODE_STATE",
            payload: { node, name, value },
        });
    }, [value]);
    return (react_1.default.createElement("div", { className: "selectBox" },
        react_1.default.createElement("select", { className: theme, onFocus: () => setIsFocused(true), onBlur: () => setIsFocused(false), onChange: handleOnChange, value: node.State[name] || "0" }, children)));
}
exports.default = Select;
