"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const core_1 = require("@oxenode/core");
function TextInput({ style = {}, title = "", name = "", nodeId, value = "", }) {
    const { setIsFocused } = react_1.default.useContext(core_1.DragContext);
    const { nodeState, dispatchNode } = react_1.default.useContext(core_1.NodeContext);
    const node = nodeState[nodeId];
    if (typeof node.State[name] === "string")
        value = node.State[name];
    const handleOnChange = (e) => {
        dispatchNode({
            type: "UPDATE_NODE_STATE",
            payload: {
                node,
                name,
                value: e.target.value,
            },
        });
    };
    react_1.default.useEffect(() => {
        dispatchNode({
            type: "UPDATE_NODE_STATE",
            payload: { node, name, value },
        });
    }, [value]);
    const message = (nodeState[nodeId].State || {})[name] || "";
    const messageLength = message.length || 0;
    return (react_1.default.createElement("div", { style: { width: `${Math.min(18, messageLength + 4)}rem` }, className: "textArea" },
        title.length > 0 ? react_1.default.createElement("h4", null, title) : react_1.default.createElement(react_1.default.Fragment, null),
        react_1.default.createElement("input", { style: {
                ...style,
                width: `${Math.min(18, messageLength + 2)}rem`,
                margin: "0px",
                padding: "0.4rem 1rem 0.4rem 1rem",
            }, onFocus: () => setIsFocused(true), onBlur: () => setIsFocused(false), type: "text", value: message, onChange: handleOnChange })));
}
exports.default = TextInput;
