import React, { useContext, useEffect } from "react";
import CodeEditor from "@uiw/react-textarea-code-editor";
import { DragContext, NodeContext } from "@oxenode/core";
import { ThemeContext } from "./Theme/ThemeContext";
const adaptiveFontSize = (len) => {
    if (len < 10)
        return 28;
    else if (len >= 10 && len < 20)
        return 24;
    else if (len >= 20 && len < 32)
        return 22;
    else if (len >= 32 && len < 120)
        return 18;
    else if (len >= 120 && len < 240)
        return 16;
    else if (len >= 240 && len < 360)
        return 14;
    else if (len >= 360 && len < 1024)
        return 12;
    else
        return 10;
};
export default function Textarea({ name = "", nodeId, value = "", width = "75rem", language = "handlebars", style = {}, }) {
    const { setIsFocused } = useContext(DragContext);
    const { nodeState, dispatchNode } = useContext(NodeContext);
    const node = nodeState[nodeId];
    const { theme } = useContext(ThemeContext);
    if (typeof node.State[name] === "string")
        value = node.State[name];
    const handleOnChange = (e) => {
        dispatchNode({
            type: "UPDATE_NODE_STATE",
            payload: {
                node,
                name,
                value: e.target.value,
            },
        });
    };
    useEffect(() => {
        dispatchNode({
            type: "UPDATE_NODE_STATE",
            payload: { node, name, value },
        });
    }, [value]);
    const content = (nodeState[nodeId].State || {})[name] || "";
    return (React.createElement("div", { className: "textArea" },
        React.createElement(CodeEditor, { onFocus: () => setIsFocused(true), onBlur: () => setIsFocused(false), "data-color-mode": theme, value: content, language: language, onChange: handleOnChange, padding: 18, style: {
                borderRadius: "8px",
                fontSize: adaptiveFontSize(content.length),
                resize: "none",
                minHeight: "2rem",
                overflowX: "hidden",
                maxWidth: width,
                backgroundColor: 'var(--dark-1, #181818)',
                fontFamily: "ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace",
                ...style
            } })));
}
