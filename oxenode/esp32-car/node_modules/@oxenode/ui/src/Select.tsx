import React from "react";

import { DragContext, NodeContext } from "@oxenode/core";
import { ThemeContext } from "./Theme/ThemeContext";

type SliderProps = React.PropsWithChildren<{
  nodeId: string;
  name: string;
  value: string;
  onChange?: (e:React.FormEvent<HTMLSelectElement>) => void;
}>;

export default function Select({
  nodeId,
  name = "",
  value = "0",
  children,
  onChange
}: SliderProps) {
  const { setIsFocused } = React.useContext(DragContext);
  const { nodeState, dispatchNode } = React.useContext(NodeContext);

  const { theme } = React.useContext(ThemeContext);

  const node = { ... nodeState[nodeId] };

  if (typeof node.State[name] === "string") {
    value = node.State[name];
  }

  if (node.State === undefined) {
    node.State = {};
  }

  if (!node.State[name]) node.State[name] = value;

  const handleOnChange = (e: any) => {
    if (onChange) onChange(e);
    dispatchNode({
      type: "UPDATE_NODE_STATE",
      payload: {
        node,
        name,
        value: e.target.value,
      },
    });
  };

  React.useEffect(() => {
    dispatchNode({
      type: "UPDATE_NODE_STATE",
      payload: { node, name, value },
    });
  }, [value]);

  return (
    <div className="selectBox">
      <select
        className={theme}
        onFocus={() => setIsFocused(true)}
        onBlur={() => setIsFocused(false)}
        onChange={handleOnChange}
        value={node.State[name] || "0"}
      >
        {children}
      </select>
    </div>
  );
}
