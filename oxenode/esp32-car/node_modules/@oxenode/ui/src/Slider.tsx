import React from "react";

import { DragContext, NodeContext } from "@oxenode/core";

type SliderProps = {
  title?: string;
  name: string;
  value: string;
  min?: number;
  max?: number;
  step?: number;
  nodeId: string;
};

export default function Slider({
  min = 0,
  max = 1,
  step = 0.02,
  name,
  nodeId,
  value,
}: SliderProps) {
  const { setIsFocused } = React.useContext(DragContext);
  const { nodeState, dispatchNode } = React.useContext(NodeContext);
  const node = { ... nodeState[nodeId] };

  if (typeof node.State[name] === "string") {
    value = node.State[name];
  }

  if (node.State === undefined) {
    node.State = {};
  }

  if (!node.State[name]) node.State[name] = value;

  const handleOnChange = (e: any) => {
    dispatchNode({
      type: "UPDATE_NODE_STATE",
      payload: {
        node,
        name,
        value: e.target.value,
      },
    });
  };

  React.useEffect(() => {
    dispatchNode({
      type: "UPDATE_NODE_STATE",
      payload: { node, name, value },
    });
  }, [value]);


  return (
    <div className="sliderBox">
      <input
        onFocus={() => setIsFocused(true)}
        onBlur={() => setIsFocused(false)}
        type="range"
        min={min}
        max={max}
        step={step}
        onChange={handleOnChange}
        value={(nodeState[nodeId].State || {})[name] || "0"}
      />
    </div>
  );
}
