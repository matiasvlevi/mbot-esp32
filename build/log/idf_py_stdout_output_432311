[1/9] Performing build step for 'bootloader'
[1/1] cd /home/vlev/Documents/Github/esp32-mbot/esp32/build/bootloader/esp-idf/esptool_py && /home/vlev/.espressif/python_env/idf5.3_py3.11_env/bin/python /home/vlev/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/vlev/Documents/Github/esp32-mbot/esp32/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
In file included from /home/vlev/Documents/Github/esp32-mbot/esp32/main/main.c:29:
/home/vlev/Documents/Github/esp32-mbot/esp32/main/wifi.h:7:13: warning: 'event_handler' declared 'static' but never defined [-Wunused-function]
    7 | static void event_handler(
      |             ^~~~~~~~~~~~~
/home/vlev/Documents/Github/esp32-mbot/esp32/main/main.c:204:18: warning: 'init_nvram' defined but not used [-Wunused-function]
  204 | static esp_err_t init_nvram(void) {
      |                  ^~~~~~~~~~
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable main.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/vlev/Documents/Github/esp32-mbot/esp32/build/main.bin
[9/9] cd /home/vlev/Documents/Github/esp32-mbot/esp32/build/esp-idf/esptool_py && /home/vlev/.espressif/python_env/idf5.3_py3.11_env/bin/python /home/vlev/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/vlev/Documents/Github/esp32-mbot/esp32/build/partition_table/partition-table.bin /home/vlev/Documents/Github/esp32-mbot/esp32/build/main.bin
main.bin binary size 0x49830 bytes. Smallest app partition is 0x100000 bytes. 0xb67d0 bytes (71%) free.
